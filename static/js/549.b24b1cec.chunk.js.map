{"version":3,"file":"static/js/549.b24b1cec.chunk.js","mappings":"oPAIaA,EAAgBC,EAAAA,GAAAA,IAAH,qIAQbC,EAAYD,EAAAA,GAAAA,IAAH,wDAKTE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kNAeRI,EAAgBJ,EAAAA,GAAAA,IAAH,+C,SC+C1B,EAtEkB,SAAC,GAA6B,IAAD,YAA1BK,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAClBC,EAA8DF,EAA9DE,KAAMC,EAAwDH,EAAxDG,MAAOC,EAAiDJ,EAAjDI,QAASC,EAAwCL,EAAxCK,OAAQC,EAAgCN,EAAhCM,WAAYC,EAAoBP,EAApBO,MAAOC,EAAaR,EAAbQ,SAGnDC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACvCC,GAAe,UAAQL,GAEvBM,EAAI,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAiBF,aAApB,iBAAG,EAAwBC,YAA3B,aAAG,EAA8BG,SACrCC,EAAM,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAiBF,aAApB,iBAAG,EAAwBC,YAA3B,aAAG,EAA8BI,OAEvCC,EAAa,kBAAMjB,GAAa,EAAnB,EAEnB,OACE,UAACP,EAAD,YACE,SAACG,EAAD,CAAUsB,GAAIR,EAAd,sBACA,UAACf,EAAD,YACE,gBACEwB,IAAKf,EACLgB,IAAKjB,EACLkB,OAAQJ,EACRK,QAASL,KAGX,4BACE,4BACE,wBAAKf,KACL,iCAAOD,SAET,wCAAgBI,MAChB,sCACA,uBAAIE,KACJ,oCACA,uBAAID,WAGR,UAACR,EAAD,YACE,oDACA,2BACE,yBACE,SAACF,EAAD,CAAUsB,GAAG,OAAOP,MAAO,CAAEC,KAAM,CAAEG,SAAUD,EAAME,OAAAA,IAArD,qBAIF,yBACE,SAACpB,EAAD,CAAUsB,GAAG,UAAUP,MAAO,CAAEC,KAAM,CAAEG,SAAUD,EAAME,OAAAA,IAAxD,2BAKJ,SAAC,KAAD,SAIP,E,2BClCD,EAtBqB,WACnB,OAAuDO,EAAAA,EAAAA,KAA/CxB,EAAR,EAAQA,MAAOyB,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,UAAWzB,EAAtC,EAAsCA,aACrB0B,GAAUC,EAAAA,EAAAA,QAAOH,GAA1BI,QACAC,GAAaC,EAAAA,EAAAA,MAAbD,SAUR,OARAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAEvB,OADAP,EAAM,CAAEQ,YAAY,SAAD,OAAWL,GAAYG,WAAAA,IACnC,WACLA,EAAWG,OACZ,CACF,GAAE,CAACT,EAAOG,KAGT,gCACGJ,IAAa,SAACW,EAAA,EAAD,IACbrC,IAAS,SAAC,EAAD,CAAWA,MAAOA,EAAOC,aAAcA,KACjD,SAACqC,EAAA,EAAD,MAGL,C","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 30px;\n  padding-top: 20px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const PageLink = styled(Link)`\n  width: 100px;\n  text-align: center;\n  color: black;\n  padding: 4px 8px;\n  border: none;\n  outline: none;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #2b96c8;\n  }\n`;\n\nexport const InfoContainer = styled.div`\n  position: relative;\n`;\n","import { Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MainContainer,\n  Container,\n  PageLink,\n  InfoContainer,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({ movie, setIsLoading }) => {\n  const { date, title, tagline, poster, popularity, genre, overview } = movie;\n\n  //це об'єкт, що містить інформацію про поточний URL-адрес.\n  const location = useLocation();\n  // URL-адрес, на який потрібно перейти\n  const backLinkHref = location.state?.from ?? '/';\n  const currentLocation = { ...location };\n  // console.log('currentLocation', currentLocation);\n  const name = currentLocation?.state?.from?.pathname;\n  const search = currentLocation?.state?.from?.search;\n\n  const onComplete = () => setIsLoading(false);\n\n  return (\n    <MainContainer>\n      <PageLink to={backLinkHref}>Go back</PageLink>\n      <Container>\n        <img\n          src={poster}\n          alt={tagline}\n          onLoad={onComplete}\n          onError={onComplete}\n        />\n\n        <div>\n          <div>\n            <h1>{title}</h1>\n            <p>{`${date}`}</p>\n          </div>\n          <p>Popularity: {popularity}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genre}</p>\n        </div>\n      </Container>\n      <InfoContainer>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <PageLink to=\"cast\" state={{ from: { pathname: name, search } }}>\n              Cast\n            </PageLink>\n          </li>\n          <li>\n            <PageLink to=\"reviews\" state={{ from: { pathname: name, search } }}>\n              Reviews\n            </PageLink>\n          </li>\n        </ul>\n        <Outlet />\n      </InfoContainer>\n    </MainContainer>\n  );\n};\n\nMovieInfo.propTypes = {\n  setIsLoading: PropTypes.func.isRequired,\n  movie: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    tagline: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    popularity: PropTypes.string.isRequired,\n    genre: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieInfo;\n","import { useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport Message from 'components/Message/Message';\n\nimport useFetch from 'services/Hooks';\nimport Loader from '../components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movie, fetchMovie, isLoading, setIsLoading } = useFetch();\n  const { current: fetch } = useRef(fetchMovie);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    fetch({ fetchParams: `movie/${moviesId}`, controller });\n    return () => {\n      controller.abort();\n    };\n  }, [fetch, moviesId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movie && <MovieInfo movie={movie} setIsLoading={setIsLoading} />}\n      <Message />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MainContainer","styled","Container","PageLink","Link","InfoContainer","movie","setIsLoading","date","title","tagline","poster","popularity","genre","overview","location","useLocation","backLinkHref","state","from","currentLocation","name","pathname","search","onComplete","to","src","alt","onLoad","onError","useFetch","fetchMovie","isLoading","fetch","useRef","current","moviesId","useParams","useEffect","controller","AbortController","fetchParams","abort","Loader","Message"],"sourceRoot":""}